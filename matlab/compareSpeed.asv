%% Demo code to show mean/variance estimation of SVGD
%% Options

fudge_factor = 1e-6;

maxIter = 1000;  % maximum iteration times
maxTrial = 20;% How many trials we want to average over
adverIter = 10;
MOpts = [10,20,50,100,200,250,500,750,1000];
%mOpts = round(MOpts/5);
mopts = ones(1,optNum) * 5; 
optNum = length(MOpts);
algNames = {'SVGD','Random Subset', 'Random Subset + Control Functional', ...
'Induced Points', 'Adversarial Induced Points'};
% Score function (simplest possible)
dlog_p = @(X)(X);


%% Run iterations

baseModel = getModel('none',-1);                                   % Base Model

t_vals = zeros(6, optNum);

for mInd = 1:optNum
    M = MOpts(mInd);
    m = mOpts(mInd);

    % Redefine all the models for given m
    subsetModel = getModel('subset',-1, m);                            % Random Subset
    subsetCFModel = getModel('subsetCF',-1, m);                        % Random Subset (CF)
    inducedModel = getModel('inducedPoints',-1, m,0,-1,0,false);       % Induced Points
    inducedAdverModel = getModel('inducedPoints',-1, m,3,adverIter,0.1,true);   % Induced Points - update y,h

    modelOpts = {baseModel, subsetModel, subsetCFModel, inducedModel, inducedAdverModel, 'MonteCarlo'};

    for trialInd = 1:maxTrial
        % Common starting parameter
        theta0 = normrnd(0,1,M,1);

        for modelInd = 1:length(modelOpts)
            fprintf('Evaluating : (M=%d) Trial (%d/%d) Model : %s \n',...
                M, trialInd, maxTrial, algNames{modelInd});
            
            modelOpt = modelOpts{modelInd};
            % Get update
            timeStart = tic;
            theta = svgd(theta0, dlog_p, maxIter, modelOpt);
            timePassed = toc(timeStart);
            t_vals(modelInd, mInd) = t_vals(modelInd, mInd) + timePassed/maxTrial;
        end

    end
end


%% Plot results
results = {t_vals,mse_x,mse_xsq};
figure;
colOpts = {'h-','o-','*-','.-','x-','s-','d-','^-','v-','p-','h-','>-','<-'};
titleNames = {'Total Time'};
yLabels = {'log10 t'};

MOptsTxt = {'10','20','30','50','80','100','150','200','250'};
numModels = 6;

for j = 1:3
    subplot(1,4,j);
    handles = zeros(1, numModels);
    result = results{j};
    for i = 1:numModels
        if j == 1
            if i ~= numModels
                handles(i) = semilogy(1:optNum, result(i,:),colOpts{i});
            end
        else
            handles(i) = plot(1:optNum, result(i,:),colOpts{i});
        end
        hold on;
    end
    title(sprintf('%s',titleNames{j}));
    xlabel('Sample Size (N)');
    ylabel(yLabels{j});
    set(gca,'Xtick',[1 4 9]);
    set(gca,'XtickLabel',{'10','50','250'});
end

subplot(1,4,4);
axis off;
leg1 = legend(handles, algNames, 'Orientation','vertical');
%set(leg1, 'Position',[0.7 0.3 0 0]);
set(leg1, 'Position',[0.8 0.5 0.05 0.05]);
